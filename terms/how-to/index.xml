<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>How to guides on Open Terms Archive documentation</title><link>https://docs.opentermsarchive.org/terms/how-to/</link><description>Recent content in How to guides on Open Terms Archive documentation</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://docs.opentermsarchive.org/terms/how-to/index.xml" rel="self" type="application/rss+xml"/><item><title>Track new terms</title><link>https://docs.opentermsarchive.org/terms/how-to/track-terms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.opentermsarchive.org/terms/how-to/track-terms/</guid><description>How to track new terms This is a step by step guide to help you add declarations to the contrib-declaration repository. This repository is dedicated for volunteer contribution of declarations to Open Terms Archive.
Having understood briefly how a declaration is structured in JSON format, we need to look at concrete steps on how you can add these JSON files to the repository.
Prerequisites ðŸ”— In order to add declarations:</description></item><item><title>How to track terms using the graphical contribution interface</title><link>https://docs.opentermsarchive.org/terms/how-to/track-terms-using-ui/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.opentermsarchive.org/terms/how-to/track-terms-using-ui/</guid><description>How to track terms using the graphical contribution interface Screencast ðŸ”— Learn how add terms with the graphical contribution interface in this 6 minutes video.
Manual ðŸ”— Blank page when contacting support ðŸ”— While using the graphical user interface for contribution, you may come across a blank page when trying to contact the team.
This may be caused by the lack of a mail program being set up in your browser.</description></item><item><title>How to test your declarations</title><link>https://docs.opentermsarchive.org/terms/how-to/test-declarations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.opentermsarchive.org/terms/how-to/test-declarations/</guid><description>How to test your declarations When creating or modifying service declarations, itâ€™s important to verify they work as expected before starting to track in production. The Open Terms Archive engine provides automated testing tools to that end.
The basic usage to test all declarations in a collection is:
npx ota validate declarations Testing specific services ðŸ”— When iterating over a specific declaration, or to narrow down testing in larger collections, the --services and --terms options enable testing a single service declaration, or even single terms:</description></item><item><title>How to be notified of terms changes</title><link>https://docs.opentermsarchive.org/terms/how-to/be-notified/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.opentermsarchive.org/terms/how-to/be-notified/</guid><description>How to be notified of terms changes An RSS feed is a type of web page that contains information about the latest content published by a website, such as the date of publication and the address where you can view it. When this resource is updated, a feed reader app automatically notifies you and you can see the update. You can receive notification for a specific service or document by subscribing to RSS feeds.</description></item><item><title>Manage a custom terms type</title><link>https://docs.opentermsarchive.org/terms/how-to/manage-custom-terms-type/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.opentermsarchive.org/terms/how-to/manage-custom-terms-type/</guid><description>How to manage a custom terms type When tracking terms and conditions across different services, you might encounter situations where a service uses terms types that aren&amp;rsquo;t yet supported by Open Terms Archive.
This guide will help you handle these custom terms types effectively, whether you&amp;rsquo;re working on a new collection or expanding an existing one.
To better understand what terms types are and how they work, you can read our detailed explanation.</description></item><item><title>How to rename a service</title><link>https://docs.opentermsarchive.org/terms/how-to/rename-a-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.opentermsarchive.org/terms/how-to/rename-a-service/</guid><description>How to rename a service The consensus is to consider that a service provider renaming a service (for example, Twitter to X) is akin to terminating the previous service and opening a new one. Therefore, to apply a service renaming, open a pull request that both terminates the previous service and adds a new service declaration with the new service name. You can reuse the terms part of the original declaration, but should double-check that the selectors and URLs still match, as a service rename is most often accompanied by a new page layout, a new domain name, and sometimes entirely new terms.</description></item><item><title>How to terminate a service</title><link>https://docs.opentermsarchive.org/terms/how-to/terminate-a-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.opentermsarchive.org/terms/how-to/terminate-a-service/</guid><description> How to terminate a service If the service provider stops offering a service, the associated terms will become unavailable. To mark that service termination in OpenÂ TermsÂ Archive and ensure tracking tentatives are stopped, while maintaining the possibility to explore the history:
Move the existing terms declaration to the service history file. Update the declaration to stop tracking all terms, by removing every &amp;lt;terms type&amp;gt; entries from the terms key in the declaration: { &amp;#34;name&amp;#34;: &amp;#34;&amp;lt;service name&amp;gt;&amp;#34;, &amp;#34;terms&amp;#34;: {} }</description></item><item><title>How to get the `validUntil` date</title><link>https://docs.opentermsarchive.org/terms/how-to/get-the-validuntil-date-from-an-issue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.opentermsarchive.org/terms/how-to/get-the-validuntil-date-from-an-issue/</guid><description>How to get the validUntil date From a GitHub issue ðŸ”— Go to the open issue and scroll to the last action from OTA-Bot (comment or issue opening).
Note that sometimes:
the date is not quite precise, it can be written &amp;ldquo;last month&amp;rdquo;
the last comment may be the announcement of the reopening of the issue
On the date of this comment, right-click &amp;ldquo;inspect&amp;rdquo; to open your browser&amp;rsquo;s code inspector.</description></item></channel></rss>