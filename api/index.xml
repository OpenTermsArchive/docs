<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programmatic access on Open Terms Archive documentation</title><link>https://docs.opentermsarchive.org/api/</link><description>Recent content in Programmatic access on Open Terms Archive documentation</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://docs.opentermsarchive.org/api/index.xml" rel="self" type="application/rss+xml"/><item><title>Command line interface</title><link>https://docs.opentermsarchive.org/api/cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.opentermsarchive.org/api/cli/</guid><description>Command line interface Once the engine module is installed as a dependency within another module, the ota command with the following subcommands is available.
In these commands:
&amp;lt;service_id&amp;gt; is the case sensitive name of the service declaration file without the extension. For example, for Twitter.json, the service ID is Twitter. &amp;lt;terms_type&amp;gt; is the property name used under the terms property in the declaration to declare a terms. For example, in the getting started declaration, the terms type declared is Privacy Policy.</description></item><item><title>Node.js module</title><link>https://docs.opentermsarchive.org/api/node/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.opentermsarchive.org/api/node/</guid><description>Node.js module As a Node module dependency, the engine exposes a JavaScript API that can be called in your own code.
Classes ðŸ”— SourceDocument new SourceDocument(params) Functions ðŸ”— extract(sourceDocument) â‡’ Promise.&amp;lt;string&amp;gt; launchHeadlessBrowser() â‡’ Promise.&amp;lt;puppeteer.Browser&amp;gt; stopHeadlessBrowser() â‡’ Promise.&amp;lt;void&amp;gt; fetch(params) â‡’ Promise.&amp;lt;{mimeType: string, content: (string|Buffer)}&amp;gt; SourceDocument ðŸ”— Kind: global class
new SourceDocument(params) ðŸ”— Represents a source document containing web content and metadata for extraction.
Includes the document location, selectors for content inclusion/exclusion,</description></item><item><title>Collection REST API</title><link>https://docs.opentermsarchive.org/api/collection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.opentermsarchive.org/api/collection/</guid><description>Collection REST API As Open Terms Archive is decentralised, each instance embarks its own API. The documentation relevant to the specific version of the engine on that instance is provided on that instance itself.
The Collection API exposes JSON data over HTTP. Its OpenAPI specification can be found at http://localhost:&amp;lt;port&amp;gt;/&amp;lt;basePath&amp;gt;/&amp;lt;API version&amp;gt;/docs.
That endpoint exposes both the OpenAPI specification if the requested Content-Type is JSON, and a Swagger UI for visual and interactive documentation otherwise.</description></item><item><title>Federation REST API</title><link>https://docs.opentermsarchive.org/api/federation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.opentermsarchive.org/api/federation/</guid><description>Federation REST API Open Terms Archive is a decentralised system that tracks collections of services&amp;rsquo; terms across multiple servers. Each collection operates its own API, and the Federation API unifies search and discovery across collections, fostering collaboration with external applications.
The Federation API exposes JSON data over HTTP. Its documentation is provided in a dedicated, interactive interface.
That endpoint exposes both the OpenAPI specification if the requested Content-Type is JSON, and a Swagger UI for visual and interactive documentation otherwise.</description></item></channel></rss>